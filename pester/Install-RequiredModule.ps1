<#PSScriptInfo

.VERSION 4.1.1

.GUID 295c5e90-c699-4a39-8db2-cb71e564a32d

.AUTHOR Joel 'Jaykul' Bennett

.COMPANYNAME PoshCode

.COPYRIGHT Copyright (c) 2020 Joel Bennett

.TAGS Install Requirements Development Dependencies Modules Install Requirements Development Dependencies Modules

.LICENSEURI https://github.com/Jaykul/RequiredModules/blob/master/LICENSE

.PROJECTURI https://github.com/Jaykul/RequiredModules

.ICONURI https://github.com/Jaykul/RequiredModules/blob/master/resources/RequiredModules.png?raw=true

.EXTERNALMODULEDEPENDENCIES

.REQUIREDSCRIPTS

.EXTERNALSCRIPTDEPENDENCIES

.RELEASENOTES

            5.0.0 Available as a module, with multiple repository support
                BREAKING CHANGES:
                - No longer automatically trusts PSGallery. You must ensure that there is at least one repository registered and trusted, or use the `-TrustRegisteredRepositories` to trust all repositories.
                - Allows installing from any trusted repository. There is also new syntax for the RequiredModules hashtables to support specifying a specific repository for any specific module. See the ReadMe or the help for Install-RequiredModule.

                MAJOR IMPROVEMENTS:
                - Supports passing the RequiredModules hashtable directly on the commandline, rather than requiring a file.
                - Also available in the "RequiredModules" module

                By default, we only install from trusted repositories. You should mark the repositories you regularly install from as trusted repositories. See the following example to trust the default PSGallery:

                    Register-PSRepository -Default -ErrorAction Ignore -InstallationPolicy Trusted
                    Get-PSRepository -Name PSGallery | Set-PSRepository -InstallationPolicy Trusted
            4.1.1 Minor fixes for edge cases and options
            4.1.0 Support non-PSGallery feeds
            4.0.6 Fix a double -Verbose problem
            4.0.5 Let the -Destination be non-empty (so we do not have to re-download every time)
            4.0.4 Fix PowerShell 5 .Where bug
            4.0.3 Fix module check when using -Destination to force all modules to be in destination
            4.0.2 Fix Remove-Module error
            4.0.1 Add logging outputs
            4.0.0 BREAKING CHANGE: require the -Destination to start empty (allow -CleanDestination to clear it)
                Fix for adding the destination to PSModulePath multiple times
                Started testing this so I can ship it to PowerShellGet
            3.0.0 BREAKING CHANGE: switch -SkipImport to -Import -- inverting the logic to NOT import by default
                Add -Destination parameter to support installing in a local tool path
            2.0.1 Squash mistaken "InstallError" message caused by Select-Object -First
                Clean up output that was unexpected
            2.0.0 BREAKING CHANGE: use NuGetVersion to support wildcards like 3.*
                Improve the error messages around aborted or failed installs
            1.0.1 Fix "Version 3.4.0 of module Pester is already installed"
            1.0.0 This is the first public release - it probably does not work right


.PRIVATEDATA

#>



<#
.SYNOPSIS
    Installs (and imports) modules listed in RequiredModules.psd1

.DESCRIPTION
    Parses a RequiredModules.psd1 listing modules and attempts to import those modules.
    If it can't find the module in the PSModulePath, attempts to install it from PowerShellGet.

    The RequiredModules list looks like this (uses nuget version range syntax, and now, has an optional syntax for specifying the repository to install from):
    @{
        "PowerShellGet" = "2.0.4"
        "Configuration" = "[1.3.1,2.0)"
        "Pester"        = "[4.4.2,4.7.0]"
        "ModuleBuilder"    = @{
            Version = "2.*"
            Repository = "https://www.powershellgallery.com/api/v2"
        }
    }

    https://docs.microsoft.com/en-us/nuget/reference/package-versioning#version-ranges-and-wildcards

.EXAMPLE
    Install-RequiredModule

    Runs the install interactively:
    - reads the default 'RequiredModules.psd1' from the current folder
    - prompts for each module that needs to be installed
.EXAMPLE
    Install-Script Install-RequiredModule
    Install-RequiredModule @{
        "Configuration" = @{
            Version = "[1.3.1,2.0)"
            Repository = "https://www.powershellgallery.com/api/v2"
        }
        "ModuleBuilder" = @{
            Version = "2.*"
            Repository = "https://www.powershellgallery.com/api/v2"
        }
    }

    This is one way you can use Install-Required module in a build script to ensure the required module are available.
.EXAMPLE
    Save-Script Install-RequiredModule -Path ./RequiredModules
    ./RequiredModules/Install-RequiredModule.ps1 -Path ./RequiredModules.psd1 -Confirm:$false -Destination ./RequiredModules -TrustRegisteredRepositories

    This shows another way to use required modules in a build script
    without changing the machine as much (keeping all the files locally)
    and supressing prompts, trusting repositories that are already registerered
#>
[CmdletBinding(DefaultParameterSetName = "FromFile", ConfirmImpact = "High", SupportsShouldProcess)]
param(
    # The path to a metadata file listing required modules. Defaults to "RequiredModules.psd1" (in the current working directory).
    [Parameter(Position = 0, ParameterSetName = "FromFile")]
    [Parameter(Position = 0, ParameterSetName = "LocalToolsFromFile")]
    [Alias("Path")]
    [string]$RequiredModulesFile = "RequiredModules.psd1",

    [Parameter(Position = 0, ParameterSetName = "FromHash", Mandatory)]
    [hashtable]$RequiredModules,

    # If set, the local tools Destination path will be cleared and recreated
    [Parameter(ParameterSetName = "LocalToolsFromFile")]
    [Switch]$CleanDestination,

    # If set, saves the modules to a local path rather than installing them to the scope
    [Parameter(Position = 1, ParameterSetName = "LocalToolsFromFile", Mandatory)]
    [string]$Destination,

    # The scope in which to install the modules (defaults to "CurrentUser")
    [ValidateSet("CurrentUser", "AllUsers")]
    $Scope = "CurrentUser",

    # Automatically trust all repositories registered in the environment.
    # This allows you to leave some repositories set as "Untrusted"
    # but trust them for the sake of installing the modules specified as required
    [switch]$TrustRegisteredRepositories,

    # Suppress normal host information output
    [Switch]$Quiet,

    # If set, the specififed modules are imported (after they are installed, if necessary)
    [Switch]$Import
)
$null = '', '' |
. {

    <#
        .SYNOPSIS
            Expands a string and loads it as an assembly or scriptblock
        .DESCRIPTION
            Converts Base64 encoded string to bytes and decompresses (gzip) it, before attempting to load or execute the result
        .LINK
            CompressToString
    #>
    [CmdletBinding(DefaultParameterSetName = "ByteArray")]
    param(
        # A Base64 encoded and deflated assembly or script
        [Parameter(Mandatory, ValueFromPipeline)]
        [string]$Base64Content
    )
    process {
        $DeflateStream = [System.IO.Compression.DeflateStream]::new(
            [System.IO.MemoryStream][System.Convert]::FromBase64String($Base64Content),
            [System.IO.Compression.CompressionMode]::Decompress)
        $OutputStream = [System.IO.MemoryStream]::new()
        $DeflateStream.CopyTo($OutputStream)
        [System.Reflection.Assembly]::Load($OutputStream.ToArray())
        trap {
            $null = $OutputStream.Seek(0, "Begin")
            # If it's a script, deal with the BOM and import it as a module in the global scope
            $Source = [System.IO.StreamReader]::new($OutputStream, $true).ReadToEnd()
            New-Module ([ScriptBlock]::Create($Source)) -Verbose:$false | Import-Module -Scope Global -Verbose:$false
            continue
        }
    }

}
Install-RequiredModule @PSBoundParameters